[project]
name = "LogFusion"
authors = [
  {email = "thiago@thir.info"},
  {name = "Thiago Dias"}
]
version = "0.1.1"
description = """
This project aims to introduce a single service for logging, monitoring, and observability.
LogFusion is designed to be a flexible and extensible logging framework that supports multiple logging handlers and integrations.
The project includes a core logging functionality, configuration management, utility functions, and decorators for logging.
It also supports various linters and formatters to ensure code quality and consistency.
"""
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python",
    "Operating System :: OS Independent",
]
requires-python = "~=3.12"
dependencies = [
    "pre-commit>=4.0.1",
    "python-dotenv==1.0.1",
    "setuptools>=75.6.0",
    "wheel>=0.45.1",
    "loguru>=0.7.2",
]

[tool.uv]
dev-dependencies = [
    "black==24.10.0",
    "pyright>=1.1.388",
    "pytest==8.3.3",
    "ruff==0.7.1",
    "typos==1.26.8",
    "pre-commit",
    "pyright",
]

[tool.ruff]
src = ["logfusion"]
line-length = 120
show-fixes = true
unsafe-fixes = true

[tool.ruff.lint]
select = ["ALL"]
ignore = ["COM812", "ISC001", "TCH001", "G002", "G004"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pycodestyle]
max-doc-length = 120

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 10

[tool.pyright]
include = ["logfusion"]  # Adjust this to your source directory
exclude = [
    "**/.venv",
    "**/__pycache__",
    "**/tests",
    "./logfusion/decorators.py",
    "./examples"
]
typeCheckingMode = "strict"  # For strictest type checking
reportMissingTypeStubs = true
reportUnknownParameterType = true
reportUnknownArgumentType = true
reportUnknownLambdaType = true
reportUnknownVariableType = true
reportUnknownMemberType = true
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportCallInDefaultInitializer = true
reportPropertyTypeMismatch = true
reportWildcardImportFromLibrary = true
reportUntypedFunctionDecorator = true
reportUntypedClassDecorator = true
reportUntypedBaseClass = true
useLibraryCodeForTypes = true
venvPath = "."
venv = ".venv"

[tool.black]
line-length = 120
target-version = ['py312']

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = true
relative-imports-order = "closest-to-furthest"
force-single-line = false
force-wrap-aliases = false

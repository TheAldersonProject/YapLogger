"""
This type stub file was generated by pyright.
"""

from typing import Any, ParamSpec

"""A flexible logger that supports multiple logging handlers."""
P = ParamSpec("P")
class Logger:
    """A flexible logger that supports multiple logging handlers."""
    def __init__(self, config: dict[str, Any]) -> None:
        """Initialize the logger with the specified configuration.

        Args:
            config (Dict[str, Any]): The logging configuration.
        """
        ...
    
    def debug(self, message: str) -> None:
        """Log a debug message.

        Args:
            message (str): The debug message to log.
        """
        ...
    
    def info(self, message: str) -> None:
        """Log an info message.

        Args:
            message (str): The info message to log.
        """
        ...
    
    def warning(self, message: str) -> None:
        """Log a warning message.

        Args:
            message (str): The warning message to log.
        """
        ...
    
    def error(self, message: str) -> None:
        """Log an error message.

        Args:
            message (str): The error message to log.
        """
        ...
    
    def critical(self, message: str) -> None:
        """Log a critical message.

        Args:
            message (str): The critical message to log.
        """
        ...
    
    def exception(self, message: str, exc_info: Exception) -> None:
        """Log an exception message.

        Args:
            message (str): The exception message to log.
            exc_info (Exception): The exception object to log.
        """
        ...
    


